The name of this application is GoDJ. 

GoDJ is an application that allows DJ's to create a profile, add events, add links to their music, and more. 
The purpose of GoDJ is for DJ's to be able to market themselves to those looking for their services. 
Currently, many DJ's have a hard time to entering the industry. If you don't already have a heavy following, it's hard
to gain traction and it's rare that you are booked unless you sell yourself short. GODJ will create an opportunity for consumers to 
search for a DJ, listen to their mixes, and read reviews for that DJ.

Current Functionality:
	Create a profile for a user. Upload profile photo and description of the user. 
	Upload events along with date, start-time, and description.
	Query a list of users who use the app. 
	Create a review for a user and display it on that user's profile. 
	
Titanium was built using Titanium Studio with Alloy and Appcelerator Cloud Services


Welcome to Alloy. Prepare to be amazed.
=======================================

Titanium Alloys are metals which contain a mixture of Titanium and other chemical elements. Such Alloys have very high tensile strength and toughness (even at extreme temperatures). They are light weight, have extraordinary corrosion resistance and the ability to withstand extreme temperatures [1].  

Alloy for Titanium provides you, the developer, with the ability to run fast, jump high and generally code like an amazing superstar. 

Codestrong!

[1] http://en.wikipedia.org/wiki/Titanium_alloy

-------------------------
Now to the serious stuff.
-------------------------

Here's how your Alloy directory is laid out.

models              your model files go here
controllers         your controllers files go here
views               yep, the views go here. you're getting it
styles              your style (.tss) files for your views go here
assets              All files here will be deployed into Resources

Folders not generated by Alloy automatically, but the developer can create and use.

lib                 put your own libraries here and use require('name') to load it
migrations			generated model migrations go here
widgets				pre-built, reusable components for your Ally apps. 

Also, in the root is the alloy.jmk file and config.json.  Alloy.jmk acts like a makefile and can be used to hook into the Alloy compiler to customize the build process. The config.json file is where you can declare runtime contstants, and widget dependencies.

